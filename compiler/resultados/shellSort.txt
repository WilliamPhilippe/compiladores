start {
              [1, 1] (7, RESERVED) {start}

              [1, 7] (1, SIGNAL) {{}

  function int[] shellSort(int[] array) {
              [2, 3] (7, RESERVED) {function}

              [2, 12] (7, RESERVED) {int}

              [2, 15] (1, SIGNAL) {[}

              [2, 16] (1, SIGNAL) {]}

              [2, 18] (4, ID) {shellSort}

              [2, 27] (1, SIGNAL) {(}

              [2, 28] (7, RESERVED) {int}

              [2, 31] (1, SIGNAL) {[}

              [2, 32] (1, SIGNAL) {]}

              [2, 34] (4, ID) {array}

              [2, 39] (1, SIGNAL) {)}

              [2, 41] (1, SIGNAL) {{}

    int n = array.size;
              [3, 5] (7, RESERVED) {int}

              [3, 9] (4, ID) {n}

              [3, 11] (5, ASSIGNMENT) {=}

              [3, 13] (4, ID) {array}

              [3, 18] (1, SIGNAL) {.}

              [3, 19] (7, RESERVED) {size}

              [3, 23] (1, SIGNAL) {;}

    int gap = (int) array.size / 2;
              [4, 5] (7, RESERVED) {int}

              [4, 9] (4, ID) {gap}

              [4, 13] (5, ASSIGNMENT) {=}

              [4, 15] (1, SIGNAL) {(}

              [4, 16] (7, RESERVED) {int}

              [4, 19] (1, SIGNAL) {)}

              [4, 21] (4, ID) {array}

              [4, 26] (1, SIGNAL) {.}

              [4, 27] (7, RESERVED) {size}

              [4, 32] (10, ARITHMETIC) {/}

              [4, 34] (2, NUMBER) {2}

              [4, 35] (1, SIGNAL) {;}


    for (; gap > 0; gap = (int) gap/2) {
              [6, 5] (7, RESERVED) {for}

              [6, 9] (1, SIGNAL) {(}

              [6, 10] (1, SIGNAL) {;}

              [6, 12] (4, ID) {gap}

              [6, 16] (6, RELATIONAL) {>}

              [6, 18] (2, NUMBER) {0}

              [6, 19] (1, SIGNAL) {;}

              [6, 21] (4, ID) {gap}

              [6, 25] (5, ASSIGNMENT) {=}

              [6, 27] (1, SIGNAL) {(}

              [6, 28] (7, RESERVED) {int}

              [6, 31] (1, SIGNAL) {)}

              [6, 33] (4, ID) {gap}

              [6, 36] (10, ARITHMETIC) {/}

              [6, 37] (2, NUMBER) {2}

              [6, 38] (1, SIGNAL) {)}

              [6, 40] (1, SIGNAL) {{}

      loop (int i; gap; n;) {
              [7, 7] (7, RESERVED) {loop}

              [7, 12] (1, SIGNAL) {(}

              [7, 13] (7, RESERVED) {int}

              [7, 17] (4, ID) {i}

              [7, 18] (1, SIGNAL) {;}

              [7, 20] (4, ID) {gap}

              [7, 23] (1, SIGNAL) {;}

              [7, 25] (4, ID) {n}

              [7, 26] (1, SIGNAL) {;}

              [7, 27] (1, SIGNAL) {)}

              [7, 29] (1, SIGNAL) {{}

        int temp = array[i];
              [8, 9] (7, RESERVED) {int}

              [8, 13] (4, ID) {temp}

              [8, 18] (5, ASSIGNMENT) {=}

              [8, 20] (4, ID) {array}

              [8, 25] (1, SIGNAL) {[}

              [8, 26] (4, ID) {i}

              [8, 27] (1, SIGNAL) {]}

              [8, 28] (1, SIGNAL) {;}

        
        int j;
              [10, 9] (7, RESERVED) {int}

              [10, 13] (4, ID) {j}

              [10, 14] (1, SIGNAL) {;}

        for (j = i; j >= gap & array[j - gap] > temp; j = j - gap) {
              [11, 9] (7, RESERVED) {for}

              [11, 13] (1, SIGNAL) {(}

              [11, 14] (4, ID) {j}

              [11, 16] (5, ASSIGNMENT) {=}

              [11, 18] (4, ID) {i}

              [11, 19] (1, SIGNAL) {;}

              [11, 21] (4, ID) {j}

              [11, 23] (6, RELATIONAL) {>=}

              [11, 26] (4, ID) {gap}

              [11, 30] (6, RELATIONAL) {&}

              [11, 32] (4, ID) {array}

              [11, 37] (1, SIGNAL) {[}

              [11, 38] (4, ID) {j}

              [11, 40] (10, ARITHMETIC) {-}

              [11, 42] (4, ID) {gap}

              [11, 45] (1, SIGNAL) {]}

              [11, 47] (6, RELATIONAL) {>}

              [11, 49] (4, ID) {temp}

              [11, 53] (1, SIGNAL) {;}

              [11, 55] (4, ID) {j}

              [11, 57] (5, ASSIGNMENT) {=}

              [11, 59] (4, ID) {j}

              [11, 61] (10, ARITHMETIC) {-}

              [11, 63] (4, ID) {gap}

              [11, 66] (1, SIGNAL) {)}

              [11, 68] (1, SIGNAL) {{}

          array[j] = array[j - gap];
              [12, 11] (4, ID) {array}

              [12, 16] (1, SIGNAL) {[}

              [12, 17] (4, ID) {j}

              [12, 18] (1, SIGNAL) {]}

              [12, 20] (5, ASSIGNMENT) {=}

              [12, 22] (4, ID) {array}

              [12, 27] (1, SIGNAL) {[}

              [12, 28] (4, ID) {j}

              [12, 30] (10, ARITHMETIC) {-}

              [12, 32] (4, ID) {gap}

              [12, 35] (1, SIGNAL) {]}

              [12, 36] (1, SIGNAL) {;}

        }
              [13, 9] (1, SIGNAL) {}}


        array[j] = temp;
              [15, 9] (4, ID) {array}

              [15, 14] (1, SIGNAL) {[}

              [15, 15] (4, ID) {j}

              [15, 16] (1, SIGNAL) {]}

              [15, 18] (5, ASSIGNMENT) {=}

              [15, 20] (4, ID) {temp}

              [15, 24] (1, SIGNAL) {;}


      }
              [17, 7] (1, SIGNAL) {}}

    }
              [18, 5] (1, SIGNAL) {}}


    return array;
              [20, 5] (7, RESERVED) {return}

              [20, 12] (4, ID) {array}

              [20, 17] (1, SIGNAL) {;}

  }
              [21, 3] (1, SIGNAL) {}}

};
              [22, 1] (1, SIGNAL) {}}

              [22, 2] (1, SIGNAL) {;}